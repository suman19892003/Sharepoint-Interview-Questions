Q. Azure AD App Application Permissions vs Delegated Permissions diff?
You typically use delegated permissions when you want to call the Web API as the logged on user. Say for example that the Web API needs to filter the data it returns based on who the user is, or execute some action as the logged in user. Or even just to log which user was initiating the call.
Application permissions are used when the application calls the API as itself. For example to get the weather forecast for a certain zipcode (it does not matter which user is logged on). The client can even call the API when there's no user present (some background service calling the API to update some status).

Q. Is there any limitation on the data that we can bind to the drop down in PowerApps?

Q. What is invariant error in React?

Q. Display User image in SPFX Solution?
  const avatar = `${webUrl}/_layouts/15/userphoto.aspx?size=L&username=${email}`
  <img src={avatar} />
  
Q. Set default Image if no image available?
  <img src={imagePath} onError={e=>{(e.target as any).src = defaultimg;}} alt='user photo'></img>
  
Q. How we can configure the outlook email to be trigerred from person who raised not from common account?

Q. Get current Context in SPFX
this.context.pageContext is available on render() method within top level class that extends BaseClientSideWebPart. Simply pass this.context as a props of to HelloWorld.tsx to reuse it.

Sample (HelloWorldWebpart.ts):
public render(): void {
const element: React.ReactElement<any > = React.createElement(
   HelloWorld,
   {
     description: this.properties.description,
     context: this.context
   }
);

 ReactDom.render(element, this.domElement);
}
And in HelloWorld.tsx you should be able to retrieve the context as this.props.context
